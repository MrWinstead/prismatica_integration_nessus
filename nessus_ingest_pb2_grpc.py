# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import nessus_ingest_pb2 as nessus__ingest__pb2


class NessusIngestStub(object):
  """The service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Nessus = channel.unary_unary(
        '/projectprismatica.official.nessus.NessusIngest/Nessus',
        request_serializer=nessus__ingest__pb2.HelloRequest.SerializeToString,
        response_deserializer=nessus__ingest__pb2.HelloReply.FromString,
        )


class NessusIngestServicer(object):
  """The service definition.
  """

  def Nessus(self, request, context):
    """
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NessusIngestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Nessus': grpc.unary_unary_rpc_method_handler(
          servicer.Nessus,
          request_deserializer=nessus__ingest__pb2.HelloRequest.FromString,
          response_serializer=nessus__ingest__pb2.HelloReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'projectprismatica.official.nessus.NessusIngest', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
